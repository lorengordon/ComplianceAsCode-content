prodtype: all
description: "Enabling <tt>CONFIG_BINFMT_MISC</tt> makes it possible to plug wrapper-driven\
    \ binary formats\ninto the kernel. This is specially useful for programs that\
    \ need an interpreter to run like\nJava, Python and DOS emulators. Once you have\
    \ registered such a binary class with the kernel,\nyou can start one of those\
    \ programs simply by typing in its name at a shell prompt.\n\nThe configuration\
    \ that was used to build kernel is available at <tt>/boot/config-*</tt>.\n   \
    \ To check the configuration value for <tt>CONFIG_BINFMT_MISC</tt>, run the following\
    \ command:\n    <tt>grep CONFIG_BINFMT_MISC /boot/config-*</tt>\n    \n    Configs\
    \ with value 'n' are not explicitly set in the file, so either commented lines\
    \ or no\n    lines should be returned.\n    "
rationale: This disables arbitrary binary format support and helps reduce attack surface.
severity: medium
references:
    anssi: BP28(R23)
identifiers: {}
ocil_clause: the kernel was not built with the required value
ocil: "To determine the config value the kernel was built with, run the following\
    \ command:\n    <pre>$ grep CONFIG_BINFMT_MISC /boot/config.*</pre>\n    \n  \
    \  Configs with value 'n' are not explicitly set in the file, so either commented\
    \ lines or no\n    lines should be returned.\n    "
oval_external_content: null
fixtext: ''
checktext: ''
vuldiscussion: ''
srg_requirement: ''
warnings:
-   general: There is no remediation for this besides re-compiling the kernel with
        the appropriate value for the config.
conflicts: []
requires: []
policy_specific_content: {}
platform: null
platforms: !!set {}
sce_metadata: {}
inherited_platforms: !!set
    machine: null
cpe_platform_names: !!set {}
inherited_cpe_platform_names: !!set
    machine: null
bash_conditional: null
fixes: {}
title: Disable kernel support for MISC binaries
definition_location: /home/oscap/content/linux_os/guide/system/kernel_build_config/kernel_config_binfmt_misc/rule.yml
template:
    name: kernel_build_config
    vars:
        config: CONFIG_BINFMT_MISC
        value: n
    backends: {}
documentation_complete: true

# platform = multi_platform_all
# reboot = false
# strategy = disable
# complexity = low
# disruption = low
- name: Block Disable service nfslock
  block:

  - name: Disable service nfslock
    block:

    - name: Disable service nfslock
      systemd:
        name: nfslock.service
        enabled: 'no'
        state: stopped
        masked: 'yes'
    rescue:

    - name: Intentionally ignored previous 'Disable service nfslock' failure, service
        was already disabled
      meta: noop
  when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80228-0
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - service_nfslock_disabled
  - unknown_severity

- name: Unit Socket Exists - nfslock.socket
  command: systemctl list-unit-files nfslock.socket
  register: socket_file_exists
  changed_when: false
  failed_when: socket_file_exists.rc not in [0, 1]
  check_mode: false
  when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
  - CCE-80228-0
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - service_nfslock_disabled
  - unknown_severity

- name: Disable socket nfslock
  systemd:
    name: nfslock.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
  - '"nfslock.socket" in socket_file_exists.stdout_lines[1]'
  tags:
  - CCE-80228-0
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - service_nfslock_disabled
  - unknown_severity

# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = low




- name: Test for existence /sbin/auditctl
  stat:
    path: "/sbin/auditctl"
  register: file_exists

- name: Ensure group owner 0 on /sbin/auditctl
  file:
    path: "/sbin/auditctl"
    group: "0"
  when: file_exists.stat is defined and file_exists.stat.exists





- name: Test for existence /sbin/aureport
  stat:
    path: "/sbin/aureport"
  register: file_exists

- name: Ensure group owner 0 on /sbin/aureport
  file:
    path: "/sbin/aureport"
    group: "0"
  when: file_exists.stat is defined and file_exists.stat.exists





- name: Test for existence /sbin/ausearch
  stat:
    path: "/sbin/ausearch"
  register: file_exists

- name: Ensure group owner 0 on /sbin/ausearch
  file:
    path: "/sbin/ausearch"
    group: "0"
  when: file_exists.stat is defined and file_exists.stat.exists





- name: Test for existence /sbin/autrace
  stat:
    path: "/sbin/autrace"
  register: file_exists

- name: Ensure group owner 0 on /sbin/autrace
  file:
    path: "/sbin/autrace"
    group: "0"
  when: file_exists.stat is defined and file_exists.stat.exists





- name: Test for existence /sbin/auditd
  stat:
    path: "/sbin/auditd"
  register: file_exists

- name: Ensure group owner 0 on /sbin/auditd
  file:
    path: "/sbin/auditd"
    group: "0"
  when: file_exists.stat is defined and file_exists.stat.exists





- name: Test for existence /sbin/audispd
  stat:
    path: "/sbin/audispd"
  register: file_exists

- name: Ensure group owner 0 on /sbin/audispd
  file:
    path: "/sbin/audispd"
    group: "0"
  when: file_exists.stat is defined and file_exists.stat.exists





- name: Test for existence /sbin/augenrules
  stat:
    path: "/sbin/augenrules"
  register: file_exists

- name: Ensure group owner 0 on /sbin/augenrules
  file:
    path: "/sbin/augenrules"
    group: "0"
  when: file_exists.stat is defined and file_exists.stat.exists



# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = high




   


- name: "Add nodev Option to /var: Check information associated to mountpoint"
  command: findmnt --fstab '/var'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: False

- name: "Add nodev Option to /var: Create mount_info dictionary variable"
  set_fact:
    mount_info: "{{ mount_info|default({})|combine({item.0: item.1}) }}"
  with_together:
    - "{{ device_name.stdout_lines[0].split() | list | lower }}"
    - "{{ device_name.stdout_lines[1].split() | list }}"
  when:
    - device_name.stdout is defined and device_name.stdout_lines is defined
    - (device_name.stdout | length > 0)

- name: "Add nodev Option to /var: If /var not mounted, craft mount_info manually"
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
    - ["target", "source", "fstype", "options"]
    - ["/var", "", "", "defaults"]
  when:
    - ("--fstab" | length == 0)
    - (device_name.stdout | length == 0)

- name: "Add nodev Option to /var: Make sure nodev option is part of the to /var options"
  set_fact:

    mount_info: "{{ mount_info | combine( {'options':''~mount_info.options~',nodev' }) }}"

  when:
    - mount_info is defined and "nodev" not in mount_info.options

- name: "Add nodev Option to /var: Ensure /var is mounted with nodev option"
  mount:
    path: "/var"
    src: "{{ mount_info.source }}"
    opts: "{{ mount_info.options }}"
    state: "mounted"
    fstype: "{{ mount_info.fstype }}"
  when:
    - (device_name.stdout is defined and (device_name.stdout | length > 0)) or ("--fstab" | length == 0)
prodtype: all
description: "This debug facility allows ACPI AML methods to be inserted and/or replaced\
    \ without rebooting\nthe system.\nThis configuration is available from kernel\
    \ 3.0.\n\nThe configuration that was used to build kernel is available at <tt>/boot/config-*</tt>.\n\
    \    To check the configuration value for <tt>CONFIG_ACPI_CUSTOM_METHOD</tt>,\
    \ run the following command:\n    <tt>grep CONFIG_ACPI_CUSTOM_METHOD /boot/config-*</tt>\n\
    \    \n    Configs with value 'n' are not explicitly set in the file, so either\
    \ commented lines or no\n    lines should be returned.\n    "
rationale: 'Enabling this feature allows arbitrary kernel memory to be written to
    by root (uid=0) users,

    allowing them to bypass certain security measures'
severity: low
references:
    anssi: BP28(R15)
identifiers:
    cce: CCE-86778-8
ocil_clause: the kernel was not built with the required value
ocil: "To determine the config value the kernel was built with, run the following\
    \ command:\n    <pre>$ grep CONFIG_ACPI_CUSTOM_METHOD /boot/config.*</pre>\n \
    \   \n    Configs with value 'n' are not explicitly set in the file, so either\
    \ commented lines or no\n    lines should be returned.\n    "
oval_external_content: null
fixtext: ''
checktext: ''
vuldiscussion: ''
srg_requirement: ''
warnings:
-   general: There is no remediation for this besides re-compiling the kernel with
        the appropriate value for the config.
conflicts: []
requires: []
policy_specific_content: {}
platform: null
platforms: !!set {}
sce_metadata: {}
inherited_platforms: !!set
    machine: null
cpe_platform_names: !!set {}
inherited_cpe_platform_names: !!set
    machine: null
bash_conditional: null
fixes: {}
title: Do not allow ACPI methods to be inserted/replaced at run time
definition_location: /home/oscap/content/linux_os/guide/system/kernel_build_config/kernel_config_acpi_custom_method/rule.yml
template:
    name: kernel_build_config
    vars:
        config: CONFIG_ACPI_CUSTOM_METHOD
        value: n
    backends: {}
documentation_complete: true

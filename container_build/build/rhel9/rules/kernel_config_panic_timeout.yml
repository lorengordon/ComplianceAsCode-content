prodtype: all
description: "Set the timeout value (in seconds) until a reboot occurs when the kernel\
    \ panics.\nA timeout of 0 configures the system to wait forever. With a timeout\
    \ value greater than 0,\nthe system will wait the specified amount of seconds\
    \ before rebooting. While a timeout value\nless than 0 makes the system reboot\
    \ immediately.\n\nThe configuration that was used to build kernel is available\
    \ at <tt>/boot/config-*</tt>.\n    To check the configuration value for <tt>CONFIG_PANIC_TIMEOUT</tt>,\
    \ run the following command:\n    <tt>grep CONFIG_PANIC_TIMEOUT /boot/config-*</tt>\n\
    \    \n    For each kernel installed, a line with value \"<sub idref=\"var_kernel_config_panic_timeout\"\
    \ />\" should be returned.\n    "
rationale: This is required to enable protection against Spectre v2.
severity: medium
references:
    anssi: BP28(R19)
identifiers:
    cce: CCE-86350-6
ocil_clause: the kernel was not built with the required value
ocil: "To determine the config value the kernel was built with, run the following\
    \ command:\n    <pre>$ grep CONFIG_PANIC_TIMEOUT /boot/config.*</pre>\n    \n\
    \    For each kernel installed, a line with value \"<sub idref=\"var_kernel_config_panic_timeout\"\
    \ />\" should be returned.\n    "
oval_external_content: null
fixtext: ''
checktext: ''
vuldiscussion: ''
srg_requirement: ''
warnings:
-   general: There is no remediation for this besides re-compiling the kernel with
        the appropriate value for the config.
conflicts: []
requires: []
policy_specific_content: {}
platform: null
platforms: !!set {}
sce_metadata: {}
inherited_platforms: !!set
    machine: null
cpe_platform_names: !!set {}
inherited_cpe_platform_names: !!set
    machine: null
bash_conditional: null
fixes: {}
title: Kernel panic timeout
definition_location: /home/oscap/content/linux_os/guide/system/kernel_build_config/kernel_config_panic_timeout/rule.yml
template:
    name: kernel_build_config
    vars:
        config: CONFIG_PANIC_TIMEOUT
        variable: var_kernel_config_panic_timeout
    backends: {}
documentation_complete: true

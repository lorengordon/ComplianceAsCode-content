prodtype: ol7,ol8,rhel7,rhel8,rhv4,sle15
description: '

    The <code>zebra</code> service can be disabled with the following command:

    <pre>$ sudo systemctl mask --now zebra.service</pre>'
rationale: 'Routing protocol daemons are typically used on routers to exchange network

    topology information with other routers. If routing daemons are used when not

    required, system network information may be unnecessarily transmitted across

    the network.'
severity: medium
references:
    cis-csc: 12,15,8
    cobit5: APO13.01,DSS05.02
    disa: CCI-000366
    hipaa: 164.308(a)(4)(i),164.308(b)(1),164.308(b)(3),164.310(b),164.312(e)(1),164.312(e)(2)(ii)
    isa-62443-2013: SR 3.1,SR 3.5,SR 3.8,SR 4.1,SR 4.3,SR 5.1,SR 5.2,SR 5.3,SR 7.1,SR
        7.6
    iso27001-2013: A.13.1.1,A.13.2.1,A.14.1.3
    nist: CM-7(a),CM-7(b),CM-6(a)
    nist-csf: PR.PT-4
    srg: SRG-OS-000480-GPOS-00227
identifiers:
    cce: CCE-91418-4
ocil_clause: the "zebra" is loaded and not masked
ocil: 'To check that the <code>zebra</code> service is disabled in system boot configuration,

    run the following command:

    <pre>$ sudo systemctl is-enabled <code>zebra</code></pre>

    Output should indicate the <code>zebra</code> service has either not been installed,

    or has been disabled at all runlevels, as shown in the example below:

    <pre>$ sudo systemctl is-enabled <code>zebra</code><br/> disabled</pre>


    Run the following command to verify <code>zebra</code> is not active (i.e. not
    running) through current runtime configuration:

    <pre>$ sudo systemctl is-active zebra</pre>


    If the service is not running the command will return the following output:

    <pre>inactive</pre>


    The service will also be masked, to check that the <code>zebra</code> is masked,
    run the following command:

    <pre>$ sudo systemctl show <code>zebra</code> | grep "LoadState\|UnitFileState"</pre>


    If the service is masked the command will return the following outputs:


    <pre>LoadState=masked</pre>


    <pre>UnitFileState=masked</pre>'
oval_external_content: null
fixtext: ''
checktext: ''
vuldiscussion: ''
srg_requirement: ''
warnings: []
conflicts: []
requires: []
policy_specific_content: {}
platform: machine
platforms: !!set
    machine: null
sce_metadata: {}
inherited_platforms: !!set {}
cpe_platform_names: !!set
    machine: null
inherited_cpe_platform_names: !!set {}
bash_conditional: null
fixes: {}
title: Disable Quagga Service
definition_location: /home/oscap/content/linux_os/guide/services/routing/disabling_quagga/service_zebra_disabled/rule.yml
template:
    name: service_disabled
    vars:
        servicename: zebra
        packagename: quagga
    backends: {}
documentation_complete: true

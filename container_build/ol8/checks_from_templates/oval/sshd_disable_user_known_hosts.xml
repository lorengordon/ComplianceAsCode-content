<def-group>
  <definition class="compliance" id="sshd_disable_user_known_hosts" version="1">
   <metadata>
        <title>Disable SSH Support for User Known Hosts</title>
        
    <affected family="unix">
    <platform>Oracle Linux 8</platform>
    </affected>
        <description>Ensure 'IgnoreUserKnownHosts' is configured with value 'yes' in /etc/ssh/sshd_config</description>
    </metadata>
   <criteria comment="sshd is configured correctly or is not installed" operator="OR">
     <criteria comment="sshd is not installed" operator="AND">
        <extend_definition comment="sshd is not required or requirement is unset"
          definition_ref="sshd_not_required_or_unset" />
        <extend_definition comment="rpm package openssh-server removed"
          definition_ref="package_openssh-server_removed" />
     </criteria>
     <criteria comment="sshd is installed and configured" operator="AND">
        <extend_definition comment="sshd is required or requirement is unset"
          definition_ref="sshd_required_or_unset" />
        <extend_definition comment="rpm package openssh-server installed"
          definition_ref="package_openssh-server_installed" />
        <criteria comment="sshd is configured correctly" operator="AND">
          <criteria comment="the configuration is correct if it exists" operator="AND"><criterion comment="Check the IgnoreUserKnownHosts in /etc/ssh/sshd_configif any"
            test_ref="test_sshd_disable_user_known_hosts" />
            <criterion comment="Check the IgnoreUserKnownHosts in sshd_config includedif any"
            test_ref="test_sshd_disable_user_known_hosts_sshd_included_files" />
            
          </criteria>
          <criterion comment="the configuraton exists" test_ref="test_IgnoreUserKnownHosts_present_sshd_disable_user_known_hosts" />
          
        </criteria>
      </criteria>
    </criteria>
  </definition>

  
  
  <ind:textfilecontent54_object id="obj_sshd_include_value_sshd_disable_user_known_hosts" version="1">
    <ind:filepath>/etc/ssh/sshd_config</ind:filepath>
    <ind:pattern operation="pattern match">^[ \t]*(?i)include(?-i)[ \t]+(.+?)[ \t]*(?:$|#)</ind:pattern>
    <ind:instance operation="greater than or equal" datatype="int">1</ind:instance>
  </ind:textfilecontent54_object>
  <local_variable id="var_sshd_config_included_files_sshd_disable_user_known_hosts" datatype="string" version="1"
  comment="Include value converted to regex">
    <concat>
      <literal_component>^(/etc/ssh/(?!/))?</literal_component>
      <substring substring_start="2" substring_length="-1">
        <unique>
          <glob_to_regex>
            <object_component item_field="subexpression" object_ref="obj_sshd_include_value_sshd_disable_user_known_hosts" />
          </glob_to_regex>
        </unique>
      </substring>
    </concat>
  </local_variable>

  
  <ind:textfilecontent54_test check="all" check_existence="any_exist"
    comment="tests the value of IgnoreUserKnownHosts setting in the sshd_config included file"
    id="test_sshd_disable_user_known_hosts_sshd_included_files" version="1">
    <ind:object object_ref="obj_sshd_disable_user_known_hosts_sshd_included_files" />
    <ind:state state_ref="state_sshd_disable_user_known_hosts_sshd_included_files" />
  </ind:textfilecontent54_test>

  <ind:textfilecontent54_object id="obj_sshd_disable_user_known_hosts_sshd_included_files" version="1">
    <ind:filepath operation="pattern match" var_ref="var_sshd_config_included_files_sshd_disable_user_known_hosts" var_check="at least one"/>
    <ind:pattern operation="pattern match">^[ \t]*(?i)IgnoreUserKnownHosts(?-i)[ \t]+(.+?)[ \t]*(?:$|#)</ind:pattern>
    <ind:instance operation="greater than or equal" datatype="int">1</ind:instance>
  </ind:textfilecontent54_object>

  
  <ind:textfilecontent54_state id="state_sshd_disable_user_known_hosts_sshd_included_files" version="1">
    <ind:subexpression datatype="string" operation="pattern match">^yes$</ind:subexpression>
  </ind:textfilecontent54_state>

  

  
  <ind:textfilecontent54_test check="all" check_existence="any_exist"
    comment="tests the value of IgnoreUserKnownHosts setting in the /etc/ssh/sshd_config file"
    id="test_sshd_disable_user_known_hosts" version="1">
    <ind:object object_ref="obj_sshd_disable_user_known_hosts" />
    <ind:state state_ref="state_sshd_disable_user_known_hosts" />
  </ind:textfilecontent54_test>
  
  <ind:textfilecontent54_object id="obj_sshd_disable_user_known_hosts" version="1">
    <ind:filepath>/etc/ssh/sshd_config</ind:filepath>
    <ind:pattern operation="pattern match">^[ \t]*(?i)IgnoreUserKnownHosts(?-i)[ \t]+(.+?)[ \t]*(?:$|#)</ind:pattern>
    <ind:instance operation="greater than or equal" datatype="int">1</ind:instance>
  </ind:textfilecontent54_object>
  
  <ind:textfilecontent54_state id="state_sshd_disable_user_known_hosts" version="1">
    <ind:subexpression datatype="string" operation="pattern match">^yes$</ind:subexpression>
  </ind:textfilecontent54_state>

  
  <ind:textfilecontent54_object comment="All confs collection" id="obj_collection_obj_sshd_disable_user_known_hosts" version="1">
    <set>
      <object_reference>obj_sshd_disable_user_known_hosts</object_reference>
      <object_reference>obj_sshd_disable_user_known_hosts_sshd_included_files</object_reference>
    </set>
  </ind:textfilecontent54_object>

  <ind:textfilecontent54_test id="test_IgnoreUserKnownHosts_present_sshd_disable_user_known_hosts" version="1"
                              check="all" check_existence="at_least_one_exists"
                              comment="Verify that the value of IgnoreUserKnownHosts is present">
    <ind:object object_ref="obj_collection_obj_sshd_disable_user_known_hosts" />
  </ind:textfilecontent54_test>

  
</def-group>
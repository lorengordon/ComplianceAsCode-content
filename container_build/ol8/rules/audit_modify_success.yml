prodtype: ol8,ol9,rhcos4,rhel8,rhel9
description: 'Ensure that successful attempts to modify a file are audited.


    The following rules configure audit as described above:

    <pre>## Successful file modifications (open for write or truncate)

    -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;01003 -F success=1
    -F auid&gt;=1000 -F auid!=unset -F key=successful-modification

    -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;01003 -F success=1
    -F auid&gt;=1000 -F auid!=unset -F key=successful-modification

    -a always,exit -F arch=b32 -S open -F a1&amp;01003 -F success=1 -F auid&gt;=1000
    -F auid!=unset -F key=successful-modification

    -a always,exit -F arch=b64 -S open -F a1&amp;01003 -F success=1 -F auid&gt;=1000
    -F auid!=unset -F key=successful-modification

    -a always,exit -F arch=b32 -S truncate,ftruncate -F success=1 -F auid&gt;=1000
    -F auid!=unset -F key=successful-modification

    -a always,exit -F arch=b64 -S truncate,ftruncate -F success=1 -F auid&gt;=1000
    -F auid!=unset -F key=successful-modification    </pre>


    Load new Audit rules into kernel by running:

    <pre>augenrules --load</pre>


    Note: This rule uses a special set of Audit rules to comply with OSPP 4.2.1. You
    may reuse this rule in different profiles. If you decide to do so, it is recommended
    that you inspect contents of the file closely and make sure that they are alligned
    with your needs.'
rationale: Auditing of successful attempts to modify a file helps in investigation
    of actions which happened on the system.
severity: medium
references:
    nist: AU-2(a)
    ospp: FAU_GEN.1.1.c
    srg: SRG-OS-000458-GPOS-00203,SRG-OS-000474-GPOS-00219,SRG-OS-000475-GPOS-00220,SRG-OS-000463-GPOS-00207,SRG-OS-000465-GPOS-00209,SRG-OS-000461-GPOS-00205
identifiers: {}
ocil_clause: the file does not exist or the content differs
ocil: 'To verify that the <tt>Audit</tt> is correctly configured according to recommended
    rules, check the content of the file with the following command:

    <pre>cat /etc/audit/rules.d/30-ospp-v42-2-modify-success.rules</pre>

    The output has to be exactly as follows:

    <pre>## Successful file modifications (open for write or truncate)

    -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;01003 -F success=1
    -F auid&gt;=1000 -F auid!=unset -F key=successful-modification

    -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;01003 -F success=1
    -F auid&gt;=1000 -F auid!=unset -F key=successful-modification

    -a always,exit -F arch=b32 -S open -F a1&amp;01003 -F success=1 -F auid&gt;=1000
    -F auid!=unset -F key=successful-modification

    -a always,exit -F arch=b64 -S open -F a1&amp;01003 -F success=1 -F auid&gt;=1000
    -F auid!=unset -F key=successful-modification

    -a always,exit -F arch=b32 -S truncate,ftruncate -F success=1 -F auid&gt;=1000
    -F auid!=unset -F key=successful-modification

    -a always,exit -F arch=b64 -S truncate,ftruncate -F success=1 -F auid&gt;=1000
    -F auid!=unset -F key=successful-modification    </pre>'
oval_external_content: null
fixtext: ''
checktext: ''
vuldiscussion: ''
srg_requirement: ''
warnings: []
conflicts: []
requires: []
policy_specific_content: {}
platform: null
platforms: !!set {}
sce_metadata: {}
inherited_platforms: !!set
    machine: null
cpe_platform_names: !!set {}
inherited_cpe_platform_names: !!set
    machine: null
bash_conditional: null
fixes: {}
title: Configure auditing of successful file modifications
definition_location: /home/oscap/content/linux_os/guide/system/auditing/policy_rules/audit_modify_success/rule.yml
template:
    name: audit_file_contents
    vars:
        filepath: /etc/audit/rules.d/30-ospp-v42-2-modify-success.rules
        contents: '## Successful file modifications (open for write or truncate)

            -a always,exit -F arch=b32 -S openat,open_by_handle_at -F a2&amp;01003
            -F success=1 -F auid&gt;=1000 -F auid!=unset -F key=successful-modification

            -a always,exit -F arch=b64 -S openat,open_by_handle_at -F a2&amp;01003
            -F success=1 -F auid&gt;=1000 -F auid!=unset -F key=successful-modification

            -a always,exit -F arch=b32 -S open -F a1&amp;01003 -F success=1 -F auid&gt;=1000
            -F auid!=unset -F key=successful-modification

            -a always,exit -F arch=b64 -S open -F a1&amp;01003 -F success=1 -F auid&gt;=1000
            -F auid!=unset -F key=successful-modification

            -a always,exit -F arch=b32 -S truncate,ftruncate -F success=1 -F auid&gt;=1000
            -F auid!=unset -F key=successful-modification

            -a always,exit -F arch=b64 -S truncate,ftruncate -F success=1 -F auid&gt;=1000
            -F auid!=unset -F key=successful-modification'
    backends: {}
documentation_complete: true

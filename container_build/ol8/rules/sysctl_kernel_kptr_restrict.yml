prodtype: all
description: 'To set the runtime status of the <code>kernel.kptr_restrict</code> kernel
    parameter, run the following command: <pre>$ sudo sysctl -w kernel.kptr_restrict=<sub
    idref="sysctl_kernel_kptr_restrict_value" /></pre>

    To make sure that the setting is persistent, add the following line to a file
    in the directory <tt>/etc/sysctl.d</tt>: <pre>kernel.kptr_restrict = <sub idref="sysctl_kernel_kptr_restrict_value"
    /></pre>'
rationale: 'Exposing kernel pointers (through procfs or <tt>seq_printf()</tt>) exposes
    kernel

    writeable structures which may contain functions pointers. If a write vulnerability

    occurs in the kernel, allowing write access to any of this structure, the kernel
    can

    be compromised. This option disallow any program without the CAP_SYSLOG capability

    to get the addresses of kernel pointers by replacing them with 0.'
severity: medium
references:
    anssi: BP28(R23)
    disa: CCI-002824,CCI-000366
    nerc-cip: CIP-002-5 R1.1,CIP-002-5 R1.2,CIP-003-8 R5.1.1,CIP-003-8 R5.3,CIP-004-6
        4.1,CIP-004-6 4.2,CIP-004-6 R2.2.3,CIP-004-6 R2.2.4,CIP-004-6 R2.3,CIP-004-6
        R4,CIP-005-6 R1,CIP-005-6 R1.1,CIP-005-6 R1.2,CIP-007-3 R3,CIP-007-3 R3.1,CIP-007-3
        R5.1,CIP-007-3 R5.1.2,CIP-007-3 R5.1.3,CIP-007-3 R5.2.1,CIP-007-3 R5.2.3,CIP-007-3
        R8.4,CIP-009-6 R.1.1,CIP-009-6 R4
    nist: SC-30,SC-30(2),SC-30(5),CM-6(a)
    srg: SRG-OS-000132-GPOS-00067,SRG-OS-000433-GPOS-00192,SRG-OS-000480-GPOS-00227
    stigid: OL08-00-040283
    stigref: SV-248891r858685_rule
identifiers: {}
ocil_clause: the kernel.kptr_restrict is not set to 1 or 2 or is configured to be
    0
ocil: 'The runtime status of the <code>kernel.kptr_restrict</code> kernel parameter
    can be queried

    by running the following command:

    <pre>$ sysctl kernel.kptr_restrict</pre>

    The output of the command should indicate either:

    <code>kernel.kptr_restrict = 1</code>

    or:

    <code>kernel.kptr_restrict = 2</code>

    The output of the command should not indicate:

    <code>kernel.kptr_restrict = 0</code>


    The preferable way how to assure the runtime compliance is to have

    correct persistent configuration, and rebooting the system.


    The persistent kernel parameter configuration is performed by specifying the appropriate

    assignment in any file located in the <pre>/etc/sysctl.d</pre> directory.

    Verify that there is not any existing incorrect configuration by executing the
    following command:

    <pre>$ grep -r ''^\s*kernel.kptr_restrict\s*='' /etc/sysctl.conf /etc/sysctl.d</pre>

    The command should not find any assignments other than:

    kernel.kptr_restrict = 1

    or:

    kernel.kptr_restrict = 2


    Conflicting assignments are not allowed.'
oval_external_content: null
fixtext: 'Configure Oracle Linux 8 to restrict exposed kernel pointer addresses access.

    Add or edit the following line in a system configuration file in the "/etc/sysctl.d/"
    directory:

    kernel.kptr_restrict = <sub idref="sysctl_kernel_kptr_restrict_value" />


    Load settings from all system configuration files with the following command:


    $ sudo sysctl --system'
checktext: ''
vuldiscussion: ''
srg_requirement: Oracle Linux 8 must restrict exposed kernel pointer addresses access.
warnings: []
conflicts: []
requires: []
policy_specific_content:
    stig:
        srg_requirement: Oracle Linux 8 must restrict exposed kernel pointer addresses
            access.
        vuldiscussion: Exposing kernel pointers (through procfs or "seq_printf()")
            exposes kernel writeable structures which may contain functions pointers.
            If a write vulnerability occurs in the kernel, allowing write access to
            any of this structure, the kernel can be compromised. This option disallow
            any program without the CAP_SYSLOG capability to get the addresses of
            kernel pointers by replacing them with 0.
        checktext: 'Verify the runtime status of the kernel.kptr_restrict kernel parameter
            with the following command:

            $ sysctl kernel.kptr_restrict


            kernel.kptr_restrict = 1


            Verify the configuration of the kernel.kptr_restrict kernel parameter
            with the following command:


            $ sudo /usr/lib/systemd/systemd-sysctl --cat-config | egrep -v ''^(#|;)''
            |  grep -F kernel.kptr_restrict | tail -1


            kernel.kptr_restrict =1


            If "kernel.kptr_restrict" is not set to "1" or is missing, this is a finding.'
        fixtext: 'Add or edit the following line in a system configuration file in
            the "/etc/sysctl.d/" directory:


            kernel.kptr_restrict = 1


            Reload settings from all system configuration files with the following
            command:


            $ sudo sysctl --system'
platform: machine
platforms: !!set
    machine: null
sce_metadata: {}
inherited_platforms: !!set {}
cpe_platform_names: !!set
    machine: null
inherited_cpe_platform_names: !!set {}
bash_conditional: null
fixes: {}
title: Restrict Exposed Kernel Pointer Addresses Access
definition_location: /home/oscap/content/linux_os/guide/system/permissions/restrictions/enable_execshield_settings/sysctl_kernel_kptr_restrict/rule.yml
template:
    name: sysctl
    vars:
        sysctlvar: kernel.kptr_restrict
        sysctlval:
        - '1'
        - '2'
        wrong_sysctlval_for_testing: '0'
        datatype: int
    backends: {}
documentation_complete: true

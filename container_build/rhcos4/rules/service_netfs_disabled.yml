prodtype: all
description: "The netfs script manages the boot-time mounting of several types\nof\
    \ networked filesystems, of which NFS and Samba are the most common. If these\n\
    filesystem types are not in use, the script can be disabled, protecting the\n\
    system somewhat against accidental or malicious changes to <tt>/etc/fstab</tt>\n\
    and against flaws in the netfs script itself.\n\nThe <code>netfs</code> service\
    \ can be disabled with the following manifest:\n<pre>\n---\napiVersion: machineconfiguration.openshift.io/v1\n\
    kind: MachineConfig\nmetadata:\n  labels:\n    machineconfiguration.openshift.io/role:\
    \ master\n  name: 75-master-netfs-disable\nspec:\n  config:\n    ignition:\n \
    \     version: 3.1.0\n    systemd:\n      units:\n      - enabled: false\n   \
    \     name: netfs.service\n</pre>\n<p>\nThis will disable the <tt>netfs</tt> service\
    \ in all the\nnodes labeled with the \"master\" role.\n</p>\n<p>\nNote that this\
    \ needs to be done for each <tt>MachineConfigPool</tt>\n</p>\n<p>\nFor more information\
    \ on how to configure nodes with the Machine Config\nOperator see\n<a xmlns='http://www.w3.org/1999/xhtml'\
    \ href='https://docs.openshift.com/container-platform/4.6/post_installation_configuration/machine-configuration-tasks.html'>the\
    \ relevant documentation</a>.\n</p>"
rationale: ''
severity: unknown
references: {}
identifiers: {}
ocil_clause: null
ocil: null
oval_external_content: null
fixtext: ''
checktext: ''
vuldiscussion: ''
srg_requirement: ''
warnings: []
conflicts: []
requires: []
policy_specific_content: {}
platform: null
platforms: !!set {}
sce_metadata: {}
inherited_platforms: !!set
    machine: null
cpe_platform_names: !!set {}
inherited_cpe_platform_names: !!set
    machine: null
bash_conditional: null
fixes: {}
title: Disable Network File Systems (netfs)
definition_location: /home/oscap/content/linux_os/guide/services/nfs_and_rpc/disabling_nfs/disabling_netfs/service_netfs_disabled/rule.yml
template:
    name: service_disabled
    vars:
        servicename: netfs
    backends: {}
documentation_complete: true
